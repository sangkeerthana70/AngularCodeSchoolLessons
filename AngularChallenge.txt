1-Create a Module named gemStore so we can get started on this
marketing journey.

2-Update the app.js file to create an Angular Module named
gemStore.
var app = angular.module('gemStore', []);
3-Attach the gemStore module to our HTML page with a Directive.

In the index.html file, add the ng-app directive to the html tag.
<html ng-app= "gemStore">

4-In index.html, create a simple Expression to display a friendly "Hello, Angular!" message.
<body>
    <h1>{{"Hello, Angular!"}}</h1>
</body>

CONTROLLERS
Controllers are where we define our app's behavior by defining 
functions and values.

In app.js, we've added a gem object to represent one of the
products in our gemStore. Assign it to the product property
of StoreController so we can use them in the page.


In order to add some behavior to our application, we need a 
controller. Add a controller named StoreController to our
gemStore application.
1-5 Add a controller named StoreController to our gemStore 
application.
2-5 Attach the StoreController to the <body> tag. Be sure to alias it as store.
Attach the controller to the body tag.
<body ng-controller="StoreController as store">
3-5In app.js, set the product in the controller.
this.product = gem;
4-5Display the name of the product inside the <h3> tag.
<h3>{{store.product.name}}
    <em class="pull-right">{{store.product.price}}</em>
</h3>





